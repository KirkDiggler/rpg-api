name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        
    - name: Install dependencies
      run: |
        go mod download
        go install go.uber.org/mock/mockgen@v0.5.0
        
    - name: Generate code
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin
        make generate
        
    - name: Run tests
      run: |
        go test -v -race -coverprofile=coverage.out -covermode=atomic \
          $(go list ./... | grep -v /gen/ | grep -v /mock | grep -v cmd/server)
          
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Trigger deployment
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      continue-on-error: true
      uses: benc-uk/workflow-dispatch@e2e5e9a103e331dad343f381a29e654aea3cf8fc # v1.2.4
      with:
        workflow: deploy.yml
        repo: KirkDiggler/rpg-deployment
        token: ${{ secrets.DEPLOYMENT_TOKEN }}
        inputs: '{"source": "rpg-api", "sha": "${{ github.sha }}"}'
